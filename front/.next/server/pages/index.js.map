{"version":3,"file":"../pages/index.js","mappings":"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","sources":["webpack://react-nodebird-front/./components/PostForm.js","webpack://react-nodebird-front/./pages/index.js","webpack://react-nodebird-front/external commonjs \"@ant-design/icons\"","webpack://react-nodebird-front/external commonjs \"antd\"","webpack://react-nodebird-front/external commonjs \"moment\"","webpack://react-nodebird-front/external commonjs \"next-redux-wrapper\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/app-router-context.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/router-context.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/router/utils/add-path-prefix.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/router/utils/format-url.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/router/utils/is-local-url.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/router/utils/parse-path.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/router/utils/remove-trailing-slash.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/router/utils/resolve-href.js\"","webpack://react-nodebird-front/external commonjs \"next/dist/shared/lib/utils.js\"","webpack://react-nodebird-front/external commonjs \"next/head\"","webpack://react-nodebird-front/external commonjs \"next/router\"","webpack://react-nodebird-front/external commonjs \"prop-types\"","webpack://react-nodebird-front/external commonjs \"react\"","webpack://react-nodebird-front/external commonjs \"react-redux\"","webpack://react-nodebird-front/external commonjs \"react-slick\"","webpack://react-nodebird-front/external commonjs \"react/jsx-runtime\"","webpack://react-nodebird-front/external commonjs \"redux\"","webpack://react-nodebird-front/external commonjs \"redux-devtools-extension\"","webpack://react-nodebird-front/external commonjs \"redux-logger\"","webpack://react-nodebird-front/external commonjs \"redux-saga/effects\"","webpack://react-nodebird-front/external commonjs \"shortid\"","webpack://react-nodebird-front/external commonjs \"styled-components\"","webpack://react-nodebird-front/external module \"@faker-js/faker\"","webpack://react-nodebird-front/external module \"axios\"","webpack://react-nodebird-front/external module \"immer\"","webpack://react-nodebird-front/external module \"react-intersection-observer\"","webpack://react-nodebird-front/external module \"redux-saga\""],"sourcesContent":["import React, { useCallback, useRef, useEffect } from \"react\";\r\nimport { Form, Button, Input } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nimport {\r\n  UPLOAD_IMAGES_REQUEST,\r\n  REMOVE_IMAGE,\r\n  ADD_POST_REQUEST,\r\n} from \"../reducers/post\";\r\nimport { backURL } from \"../config/config\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  // ref는 실제 DOM에 접근하기 위해 사용\r\n  const imageInput = useRef();\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  // 서버쪽에서 에러 발생 했는데 setText(\"\") 되면 안되니까\r\n  // post가 정상적으로 업로드 되면 setText(\"\")가 실행되도록\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (!text || !text.trim()) {\r\n      return alert(\"게시글을 작성하세요.\");\r\n    }\r\n    const formData = new FormData();\r\n    imagePaths.forEach((path) => {\r\n      formData.append(\"image\", path);\r\n    });\r\n    formData.append(\"content\", text);\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    });\r\n    // 여기서 setText(\"\") 하면 안됨\r\n    // setText(\"\");\r\n  }, [text, imagePaths]);\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    // 이미지 업로드 버튼 클릭 시 input 태그 클릭되도록\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    console.log(\"images: \" + e.target.files);\r\n    // FormData는 HTML5에서 추가된 Web API 중 하나로, HTML <form> 태그와 같이 폼 데이터를 쉽게 생성하고 제출할 수 있도록 해줍니다.\r\n    // FormData 객체를 생성할 때, new FormData()와 같이 생성자를 호출합니다. 이후에는 append() 메소드를 사용하여 폼 데이터를 추가할 수 있습니다.\r\n    const imageFormData = new FormData();\r\n    // e.target.files은 File객체다. 그래서 [].forEach.call(e.target.files, (file)=>{}) 이렇게 사용하면 File객체가 빈배열에 들어가서 반복문이 돌아간다.\r\n    // file에서는 각 객체값이 전달된다.\r\n    [].forEach.call(e.target.files, (file) => {\r\n      // append() 메소드는 두 개의 인자를 받으며, 첫 번째 인자는 데이터의 이름(name), 두 번째 인자는 데이터의 값(value)입니다.\r\n      imageFormData.append(\"image\", file);\r\n    });\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  }, []);\r\n\r\n  const onRemoveImage = useCallback(\r\n    (index) => () => {\r\n      dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data: index,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"mutipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          multiple\r\n          hidden\r\n          ref={imageInput}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v, i) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\r\n            <div>\r\n              <Button onClick={onRemoveImage(i)}>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Head from \"next/head\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { END } from \"redux-saga\";\r\nimport axios from \"axios\";\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\n// export할 때 default를 붙인 경우 중괄호 없이 import 가능\r\n// default 없이 export한 경우 중괄호 안에 담아 import 해줘야 함\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nimport wrapper from \"../store/configureStore\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } =\r\n    useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  // useEffect(() => {\r\n  //   function onScroll() {\r\n  //     // 페이지 최상단에서 현재 보이는 최상단 까지의 길이(얼마나 내렸는지) - window.scrollY\r\n  //     // 화면 보이는 길이 - document.documentElement.clientHeight\r\n  //     // 총 길이 - document.documentElement.scrollHeight\r\n  //     // 자연스럽게 로딩하는 모습 보여주기 위해 300픽셀 위에서 dispatch하도록\r\n  //     if (\r\n  //       window.scrollY + document.documentElement.clientHeight >\r\n  //       document.documentElement.scrollHeight - 300\r\n  //     ) {\r\n  //       if (hasMorePosts && !loadPostsLoading) {\r\n  //         dispatch({\r\n  //           type: LOAD_POSTS_REQUEST,\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   // useEffect에서 addEventListener할 때는 항상 return해줘야 함 -> scroll 했던 거 해제하기\r\n  //   // 안그러면 계속 메모리에 쌓여있음\r\n  //   window.addEventListener(\"scroll\", onScroll);\r\n  //   return () => {\r\n  //     window.removeEventListener(\"scroll\", onScroll);\r\n  //   };\r\n  // }, [hasMorePosts]);\r\n\r\n  // ref -> 감지할 요소에 연결할 ref\r\n  // inView -> 연결한 ref 요소가 뷰포트 내에 있는지 여부를 나타내는 boolean 값\r\n  // entry ->  Intersection Observer API의 IntersectionObserverEntry 객체\r\n  // -> 이 객체를 사용하여 요소의 위치, 크기 등의 정보를 얻을 수 있음\r\n  const [ref, inView, entry] = useInView();\r\n  useEffect(() => {\r\n    // 로딩중 때문에 속도 느린듯...\r\n    if (inView && hasMorePosts && !loadPostsLoading) {\r\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n      dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n        lastId,\r\n      });\r\n    }\r\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>NodeBird</title>\r\n        {/* public 폴더에 favicon.ico 파일을 두면, Next.js는 자동으로 해당 파일을 로드하여 브라우저의 탭에 표시함 안뜨면 ctrl+shift+r해서 강력 새로고침하면 됨*/}\r\n        {/* <link rel=\"icon\" href=\"/favicon.ico\" /> */}\r\n      </Head>\r\n      <AppLayout>\r\n        {me && <PostForm />}\r\n        {mainPosts.map((post) => (\r\n          <PostCard key={post.id} post={post} />\r\n        ))}\r\n        {/* 내용의 요소가 없을 때 height를 안주면 감지를 못함 그래서 height를 줘야 감지해서 inView값이 true가 됨 */}\r\n        <div\r\n          ref={hasMorePosts && !loadPostsLoading ? ref : undefined}\r\n          style={{ height: 40 }}\r\n        />\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\n// getServerSideProps는 브라우저에서 실행X, 프론트서버에서 실행O\r\n// 브라우저 -> 백엔드로 데이터 보낼 때 알아서 쿠키 담아서 보내줌\r\n// 프론트 -> SSR은 주체는 프론트서버기 때문에 백엔드로 데이터 보낼 때 쿠키 담아서 보내줘야 함\r\n// 이부분이 Home보다 먼저 실행됨\r\n// context안에 store가 들어있음\r\n// 실행된 결과를 HYDRATE로 보내줌\r\n// 접속한 상황에 따라 화면이 바뀌어 할 때(웬만하면 getServerSideProps를 사용)\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    // 서버쪽에서 실행되면 context.req라는게 존재함\r\n    // 이렇게 해줘야 서버쪽으로 쿠기가 전달됨\r\n    const cookie = context.req ? context.req.headers.cookie : \"\";\r\n    // 서버가 1개이기 때문에 쿠키가 공유되는 문제를 막아야 함\r\n    // 그래서 요청이 들어오면 기존에 있던 유저의 쿠기를 지우고 새로운 유저의 쿠키를 담아주기\r\n    axios.defaults.headers.Cookie = \"\";\r\n    if (cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n    // SUCCESS까지 기다려주는 장치\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Home;\r\n","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"antd\");","module.exports = require(\"moment\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/dist/shared/lib/app-router-context.js\");","module.exports = require(\"next/dist/shared/lib/router-context.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/add-path-prefix.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/format-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/is-local-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/parse-path.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/remove-trailing-slash.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/resolve-href.js\");","module.exports = require(\"next/dist/shared/lib/utils.js\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-slick\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-logger\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"shortid\");","module.exports = require(\"styled-components\");","module.exports = import(\"@faker-js/faker\");;","module.exports = import(\"axios\");;","module.exports = import(\"immer\");;","module.exports = import(\"react-intersection-observer\");;","module.exports = import(\"redux-saga\");;"],"names":["React","useCallback","useRef","useEffect","Form","Button","Input","useSelector","useDispatch","useInput","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","backURL","PostForm","imagePaths","addPostDone","state","post","dispatch","imageInput","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","path","append","type","data","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","file","onRemoveImage","index","margin","float","map","v","i","display","width","Head","useInView","END","axios","AppLayout","PostCard","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","Home","me","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","ref","inView","entry","lastId","length","id","undefined","height","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"sourceRoot":""}